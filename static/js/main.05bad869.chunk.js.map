{"version":3,"sources":["Components/DataRow/DataRow.Module.css","Components/AddEditForm/AddEditForm.Module.css","Components/ModalForm/ModalForm.Module.css","Components/AddEditForm/AddEditForm.js","Components/ModalForm/ModalForm.js","Components/DataRow/DataRow.js","Components/DataTable/DataTable.js","services/NotesService.js","Components/Home/Home.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","AddEditForm","props","onChange","e","setState","target","name","value","submitFormAdd","preventDefault","onAddItem","state","toggle","submitFormEdit","onUpdateItem","id","category","word","content","status","bind","this","item","Form","className","styles","myform","onSubmit","FormGroup","Label","for","Input","type","placeholder","Button","React","Component","ModalForm","prevState","modal","closeBtn","onClick","label","buttonLabel","button","title","color","style","float","marginRight","Modal","isOpen","ModalHeader","close","ModalBody","DataRow","row","onDeleteItem","nowrap","join","DataTable","Table","responsive","hover","size","items","map","i","a","fetch","process","response","json","console","log","method","data","headers","body","JSON","stringify","Home","useState","setItems","triggered","setTriggered","useEffect","getNotes","then","n","catch","err","Container","fluid","Row","Col","margin","note","amendNote","finally","deleteNote","filename","padding","createNote","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.05bad869.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nowrap\":\"_3Q9TkAr8rUv31-6pbi0TN9\",\"content\":\"_3aXoN_nhSiLeW6QqUH9PxO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"_3d-GGwrS7KYPGjDh15YBKn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"my-modal\":\"_2PIOciE2YmhTjHiMLtOTpT\"};","import React from 'react';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport styles from './AddEditForm.Module.css'\n\nclass AddEditForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: 0,\n            category: 'Spanish',\n            word: '',\n            content: '',\n            status: ''\n        }\n\n        this.onChange = this.onChange.bind(this);\n        this.submitFormAdd = this.submitFormAdd.bind(this);\n        this.submitFormEdit = this.submitFormEdit.bind(this);\n    }\n\n    // computed property name syntax\n    // setState merges a partial state into the current state.\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n    submitFormAdd = e => {\n        e.preventDefault()\n        this.props.onAddItem(this.state);\n        this.props.toggle()\n    }\n\n    submitFormEdit = e => {\n        e.preventDefault()\n        this.props.onUpdateItem(this.state);\n        this.props.toggle()\n    }\n\n    componentDidMount() {\n        if (this.props.item) {\n            const { id, category, word, content, status } = this.props.item\n            this.setState({ id, category, word, content, status });\n        }\n    }\n\n    render() {\n        return (\n            <Form className={styles.myform} onSubmit={this.props.item ? this.submitFormEdit : this.submitFormAdd}>\n                <FormGroup>\n                    <Label for=\"category\">Category</Label>\n                    <Input type=\"select\" name=\"category\" id=\"category\" onChange={this.onChange} value={ !(this.state.category) ? '' : this.state.category}>\n                        <option>Spanish</option>\n                        <option>English</option>\n                        <option>Desarrollador</option>\n                        <option>Destinacinon</option>\n                        <option></option>\n                    </Input>\n                </FormGroup>\n                <FormGroup>\n                    <Label for=\"word\">Word</Label>\n                    <Input type=\"text\" name=\"word\" id=\"word\" onChange={this.onChange} value={this.state.word === null ? '' : this.state.word} />\n                </FormGroup>\n                <FormGroup>\n                    <Label for=\"content\">Content</Label>\n                    <Input className={styles.content} type=\"textarea\" name=\"content\" id=\"content\" onChange={this.onChange} value={this.state.content === null ? '' : this.state.content} />\n                </FormGroup>\n                <FormGroup>\n                    <Label for=\"status\">Status</Label>\n                    <Input type=\"text\" name=\"status\" id=\"status\" onChange={this.onChange} value={this.state.status === null ? 'Created' : this.state.status} placeholder=\"Created\" />\n                </FormGroup>\n                <Button>Submit</Button>\n            </Form>\n        );\n    }\n}\n\nexport default AddEditForm","import React, { Component } from 'react'\nimport { Button, Modal, ModalHeader, ModalBody } from 'reactstrap'\nimport AddEditForm from '../AddEditForm/AddEditForm'\nimport styles from './ModalForm.Module.css'\n\nclass ModalForm extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            modal: false\n        }\n    }\n\n    toggle = () => {\n        this.setState(prevState => ({\n            modal: !prevState.modal\n        }))\n    }\n\n    render() {\n        const closeBtn = <button className=\"close\" onClick={this.toggle}>&times;</button>\n        const label = this.props.buttonLabel\n\n        let button = ''\n        let title = ''\n\n        if (label === 'Edit') {\n            button = <Button\n                color=\"warning\"\n                onClick={this.toggle}\n                style={{ float: \"left\", marginRight: \"10px\" }}>{label}\n            </Button>\n            title = 'Edit Item'\n        } else {\n            button = <Button\n                color=\"success\"\n                onClick={this.toggle}\n                style={{ float: \"left\", marginRight: \"10px\" }}>{label}\n            </Button>\n            title = 'Add New Item'\n        }\n\n        return (\n            <div>\n                {button}\n                <Modal isOpen={this.state.modal} toggle={this.toggle} className={styles[\"my-modal\"]}>\n                    <ModalHeader toggle={this.toggle} close={closeBtn}>{title}</ModalHeader>\n                    <ModalBody>\n                        <AddEditForm\n                            onAddItem={this.props.onAddItem}\n                            onUpdateItem={this.props.onUpdateItem}\n                            toggle={this.toggle}\n                            item={this.props.item} />\n                    </ModalBody>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default ModalForm","import { Button } from 'reactstrap'\nimport ModalForm from '../ModalForm/ModalForm'\nimport styles from './DataRow.Module.css'\n\nconst DataRow = ({ row, onDeleteItem, onUpdateItem }) => {\n    return (\n        <tr>\n            <td>{row.category}</td>\n            <td>{row.word}</td>\n            <td className={[styles.nowrap, styles.content].join(' ')}>{row.content}</td>\n            <td>{row.status}</td>\n            <td>\n                <div className={styles.nowrap}>\n                    <ModalForm buttonLabel=\"Edit\" item={row} onUpdateItem={onUpdateItem} />\n                    {' '}\n                    <Button color='danger' onClick={() => onDeleteItem(row.id)}>Delete</Button>\n                </div>\n            </td>\n        </tr>\n    )\n}\n\nexport default DataRow;","import React from 'react'\nimport { Table } from 'reactstrap'\nimport DataRow from '../DataRow/DataRow'\n\nconst DataTable = (props) => {\n\n    return (\n        <Table responsive hover size=\"sm\">\n            <thead>\n                <tr >\n                    <th>Category</th>\n                    <th>Word</th>\n                    <th>Content</th>\n                    <th>Status</th>\n                    <th>Actions</th>\n                </tr>\n            </thead>\n            <tbody>\n                {props.items.map(i => <DataRow row={i} key={i.id}\n                    onDeleteItem={props.onDeleteItem}\n                    onUpdateItem={props.onUpdateItem} />)}\n            </tbody>\n        </Table>\n    )\n}\n\nexport default DataTable;","// https://medium.com/bb-tutorials-and-thoughts/building-an-react-app-with-azure-static-web-apps-service-4e3e23e9870c\n// https://github.com/bbachi/react-azure-static-web-app/blob/master/todo-app/src/services/TodoService.js\nexport async function getNotes() {\n    const response = await fetch(`${process.env.REACT_APP_API}/note`);\n    return await response.json();\n}\n\nexport async function deleteNote(id) {\n    console.log(`deleting :${id}`);\n    const response = await fetch(`${process.env.REACT_APP_API}/note/${id}`, { method: 'DELETE' });\n    return response.status;\n}\n\nexport async function createNote(data) {\n    console.log(\"createNote\", data);\n    const response = await fetch(`${process.env.REACT_APP_API}/note`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data)\n    })\n\n    if (response.status === 200) {\n        return await response.json();\n    } else {\n        return {};\n    }\n}\n\nexport async function amendNote(id, data) {\n    console.log(\"amendNote\", data);\n    const response = await fetch(`${process.env.REACT_APP_API}/note/${id}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(data)\n    })\n    if (response.status === 200) {\n        return await response.json();\n    } else {\n        return {};\n    }\n}","import React, { useEffect, useState } from 'react';\nimport { Container, Row, Col } from 'reactstrap'\nimport ModalForm from '../ModalForm/ModalForm'\nimport DataTable from '../DataTable/DataTable'\nimport { CSVLink } from \"react-csv\"\nimport { getNotes, deleteNote, createNote, amendNote } from '../../services/NotesService'\n\nconst Home = () => {\n    const [items, setItems] = useState([]);\n    const [triggered, setTriggered] = useState(false);\n\n    useEffect(() => {\n        getNotes()\n            .then(n => {\n                //console.log(\"got :\", n);\n                setItems(n);\n            })\n            .catch(err => console.log(err))\n    }, [triggered]);\n\n    const onUpdateItem = (note) => {\n        amendNote(note.id, note)\n            .catch(err => console.log(err))\n            .finally(() => setTriggered(!triggered));\n    }\n    const onDeleteItem = (id) => {\n        deleteNote(id)\n            .catch(err => console.log(err))\n            .finally(() => setTriggered(!triggered));\n    }\n\n    function onAddItem(item) {\n        createNote(item)\n            .then(n => {\n                console.log(\"created: \", n);\n            })\n            .catch(err => console.log(err))\n            .finally(() => setTriggered(!triggered));\n    }\n\n    return (\n        <Container fluid className=\"App\">\n            <Row>\n                <Col>\n                    <h1 style={{ margin: \"10px 0\" }}>Words Reminder</h1>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <DataTable items={items} onUpdateItem={onUpdateItem} onDeleteItem={onDeleteItem} />\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <CSVLink\n                        filename={\"db.csv\"}\n                        color=\"primary\"\n                        style={{ float: \"left\", marginRight: \"10px\", padding:\"1px\" }}\n                        className=\"btn btn-primary\"\n                        data={items}>\n                        Download CSV\n                    </CSVLink>\n                    <ModalForm buttonLabel=\"Add Item\" onAddItem={onAddItem} />\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default Home;","import './App.css';\nimport Home from './Components/Home/Home'\n\nfunction App() {\n  return (\n      <Home />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}